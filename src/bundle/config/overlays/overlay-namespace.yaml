#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@ def endswith(index, left, right):
#@  return left.endswith(right)
#@ end

#@ def replacens(old, new):
#@  return lambda left, right: left.replace(old, new)
#@ end

---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "external-secrets-cert-controller"}})
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by=overlay.map_key("name")
        - name: cert-controller
          args:
            #@overlay/match by=endswith,expects=2
            #@overlay/replace via=lambda left, right: left.replace("default", data.values.namespace)
            - default

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "external-secrets-webhook"}})
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by=overlay.map_key("name")
        - name: webhook
          args:
            #@overlay/match by=endswith
            #@overlay/replace via=lambda left, right: left.replace("external-secrets-webhook.default.svc", "external-secrets-webhook.{}.svc".format(data.values.namespace))
            - external-secrets-webhook.default.svc

#@overlay/match by=overlay.subset({"metadata": {"namespace": "default"}}), expects=10
---
metadata:
  namespace: #@ data.values.namespace

#@ crb=overlay.subset({"kind":"ClusterRoleBinding"})
#@ rb=overlay.subset({"kind":"RoleBinding"})
#@overlay/match by=overlay.or_op(crb, rb), expects=3
---
subjects:
  #@overlay/match by=overlay.subset({"namespace": "default"})
  - kind: ServiceAccount
    namespace: #@ data.values.namespace

#@ vwc=overlay.subset({"kind":"ValidatingWebhookConfiguration"})
#@ mwc=overlay.subset({"kind":"MutatingWebhookConfiguration"})
#@overlay/match by=overlay.or_op(vwc, mwc), expects=2
---
webhooks:
  #@overlay/match by=overlay.all, expects="1+"
  - clientConfig:
      service:
        namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind": "CustomResourceDefinition"}), expects=11
---
spec:
  conversion:
    webhook:
      clientConfig:
        service:
          namespace: #@ data.values.namespace
